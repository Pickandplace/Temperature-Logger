/********************************************************************
 * Copyright (C) 2017 Jean Wlodarski
 * 
 * KaZjjW at gmailcom
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 * 
 * The original code is from Microchip, under the Microchip license.
********************************************************************/
// File: 18f46j50_g.lkr
// Generic linker script for the PIC18F46J50 processor

// THIS LINKER SCRIPT HAS BEEN MODIFIED...  This version is intended to be used
// with the "PROGRAMMABLE_WITH_USB_HID_BOOTLOADER" bootloader.  The HID
// bootloader occupies memory ranges 0x000-0xFFF.  In order for the code generated
// by this project to work with the bootloader, the linker must not put any code
// in the 0x00-0xFFF address range.

// This linker script was originated from the 18f87j50.lkr file provided by
// the MCC18 distribution.

// NOTE: As configured by default the HID bootloader does not erase or attempt to
// program the last 1024 byte block of program memory (because this flash memory
// block contains the flash configuration words).
// Erasing and reprogramming the configuration words is "slightly dangerous" in that
// it is possible to bootload incorrect configuration bit settings that will
// prevent both the application and bootloader from working properly (ex: incorrect
// oscillator configuration settings, which are incompatible with USB operation).
// The bootloader does allow the user to override this behavior however, and the 
// last 1024 bytes of program memory (including config words) may be both
// erased and programmed, if the user is careful.

// However, by default, the last 1024 bytes of program memory are not
// erased or re-programmed.  Therefore, the last 1024 bytes of program memory
// have been marked PROTECTED in the linker script, to prevent the linker from
// "accidentally" placing code in this region.

#DEFINE _CODEEND _DEBUGCODESTART - 1
#DEFINE _CEND _CODEEND + _DEBUGCODELEN
#DEFINE _DATAEND _DEBUGDATASTART - 1
#DEFINE _DEND _DATAEND + _DEBUGDATALEN

LIBPATH .

#IFDEF _CRUNTIME
  #IFDEF _EXTENDEDMODE
    FILES c018i_e.o
    FILES clib_e.lib
    FILES p18F26J50_e.lib

  #ELSE
    FILES c018i.o
    FILES clib.lib
    FILES p18F26J50.lib
  #FI

#FI

#IFDEF _DEBUGCODESTART
  CODEPAGE   NAME=bootloader START=0x0            END=0xFFF          PROTECTED		   
  CODEPAGE   NAME=page       START=0x1000         END=_CODEEND
  CODEPAGE   NAME=debug      START=_DEBUGCODESTART   END=_CEND        PROTECTED
#ELSE
  CODEPAGE   NAME=bootloader START=0x0            END=0xFFF          PROTECTED		   
  CODEPAGE   NAME=page       START=0x1000               END=0xFFF7
#FI

CODEPAGE   NAME=config     START=0xFFF8            END=0xFFFF         PROTECTED
CODEPAGE   NAME=devid      START=0x3FFFFE          END=0x3FFFFF       PROTECTED

#IFDEF _EXTENDEDMODE
  DATABANK   NAME=gpre       START=0x0               END=0x5F
#ELSE
  ACCESSBANK NAME=accessram  START=0x0               END=0x5F
#FI

DATABANK   NAME=gpr0       START=0x60              END=0xFF
DATABANK   NAME=gpr1       START=0x100             END=0x1FF
DATABANK   NAME=gpr2       START=0x200             END=0x2FF
DATABANK   NAME=gpr3       START=0x300             END=0x3FF

DATABANK   NAME=usb0       START=0x400             END=0x5FF
DATABANK   NAME=myMSD      START=0x600             END=0x7FF           PROTECTED	
DATABANK   NAME=dataBuffer START=0x800             END=0x9FF           PROTECTED		
DATABANK   NAME=FATBuffer  START=0xA00             END=0xBFF           PROTECTED		

DATABANK   NAME=cstack     START=0xC00             END=0xD7F//D7F

#IFDEF _DEBUGDATASTART
  DATABANK   NAME=gpr13      START=0xD80             END=_DATAEND
  DATABANK   NAME=dbgspr     START=_DEBUGDATASTART   END=_DEND           PROTECTED
#ELSE //no debug
  DATABANK   NAME=gpr13      START=0xD80             END=0xDFF
#FI

DATABANK   NAME=grp14     START=0xE00             END=0xEBF
DATABANK   NAME=sfr14      START=0xEC0             END=0xEFF          PROTECTED
DATABANK   NAME=sfr15      START=0xF00             END=0xF5F          PROTECTED
ACCESSBANK NAME=accesssfr  START=0xF60             END=0xFFF          PROTECTED

SECTION    NAME=USB_VARS   RAM=gpr3

#IFDEF _CRUNTIME
  SECTION    NAME=CONFIG     ROM=config
  #IFDEF _DEBUGDATASTART
    STACK SIZE=0x180 RAM=cstack
  #ELSE
    STACK SIZE=0x180 RAM=cstack
  #FI
#FI
